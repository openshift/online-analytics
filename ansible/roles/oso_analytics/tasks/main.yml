---
- name: Check for required vars
  fail:
    msg: "Please specify a value for {{ item }}"
  when: item is undefined
  with_items:
  - osoan_cluster_name
  - osoan_woopra_enabled
  - osoan_woopra_domain

- import_tasks: uninstall.yml
  when: osoan_uninstall | bool

- debug:
    msg: "Deploying {{ osoan_name}} from {{ osoan_git_repo }} ref {{osoan_git_ref }}"

# Keep the same file structure as we currently have with openshift-scripts rpm
- name: Ensure template directory exists
  file:
    path: "{{ osoan_template_directory }}"
    state: directory

- name: Copy application template
  template:
    src: analytics-template.yaml.j2
    dest: "{{ osoan_template_path }}"
  register: template

- name: Create template
  command: "oc apply -f {{ osoan_template_path }} -n {{ osoan_namespace }}"
  when: template|changed

- name: Create pod from template
  shell: "oc process -n {{ osoan_namespace }} {{ osoan_name }} -p GIT_REPO='{{ osoan_git_repo }}' -p GIT_REF='{{ osoan_git_ref }}' -p WOOPRA_ENABLED='{{ osoan_woopra_enabled }}' -p WOOPRA_ENDPOINT='{{ osoan_woopra_endpoint }}' -p WOOPRA_DOMAIN='{{ osoan_woopra_domain }}' -p LOCAL_ENDPOINT_ENABLED='{{ osoan_local_endpoint_enabled }}' -p USER_KEY_STRATEGY='{{ osoan_user_key_strategy }}' -p CLUSTER_NAME='{{ osoan_cluster_name }}' -p LOG_LEVEL='{{ osoan_log_level }}' | oc apply -n {{ osoan_namespace }} -f -"
  when: template|changed

- name: Fetch latest git commit
  git:
    repo: "{{ osoan_git_repo }}"
    version: "{{ osoan_git_ref }}"
    clone: no
    accept_hostkey: true
  register: git_sha1_results
  # Git may not be installed on remote hosts.
  delegate_to: localhost
  changed_when: false

- debug: msg="Checking that latest build matches git ref {{ git_sha1_results.after }}"

- name: Start build if required
  oc_start_build_check:
    namespace: "{{ osoan_namespace }}"
    buildconfig: "{{ osoan_name }}"
    git_ref: "{{ git_sha1_results.after }}"
  register: start_build_out

- debug: var=start_build_out

- name: Check deployment status
  include_role:
    name: roles/oso_deployment_status
  vars:
    osds_dc_name: "{{ osoan_name }}"
    osds_namespace: "{{ osoan_namespace }}"
